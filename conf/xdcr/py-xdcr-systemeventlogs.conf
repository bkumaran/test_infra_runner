# Remote cluster ref - create, update, delete
xdcr.uniXDCR.unidirectional.load_with_ops

# Replications - create, update, delete
xdcr.uniXDCR.unidirectional.verify_replications_deleted_after_bucket_deletion

# Replications - pause, resume
xdcr.pauseResumeXDCR.PauseResumeTest.replication_with_pause_and_resume,consecutive_pause_resume=3,pause=C1-C2

# Default replication settings
xdcr.compressionXDCR.compression.test_compression_with_unixdcr_backfill_load,update=C1,delete=C1,default_bucket=False,standard_buckets=2
xdcr.nwusageXDCR.nwusage.test_nwusage_with_unidirection,nw_limit=1,update=C1,delete=C1

# Replication settings
xdcr.prioritizationXDCR.XDCRPrioritization.test_priority,initial=True,standard_buckets=2,default@C1=priority:Low,desired_latency:1000000,standard_bucket_1@C1=priority:Medium,desired_latency:100000,standard_bucket_2@C1=priority:High,desired_latency:10000,gomaxprocs=20
xdcr.advFilteringXDCR.XDCRAdvFilterTests.test_xdcr_with_filter,default@C1=filter_expression:REGEXP_CONTAINS(META()dotidcomma'0$'),failure_restart_interval:20,timeout_percentage:60
xdcr.lww.Lww.test_lww_enable

# Other
xdcr.uniXDCR.unidirectional.load_with_failover_master,failover=C1
xdcr.rebalanceXDCR.Rebalance.async_rebalance_in,update=C1-C2,delete=C1-C2,expires=300,rebalance=C1,num_rebalance=1
xdcr.rebalanceXDCR.Rebalance.async_rebalance_out,update=C1-C2,delete=C1-C2,rebalance=C1-C2,num_rebalance=1
xdcr.secureXDCR.XDCRSecurityTests.test_xdcr_with_security,enable_n2n=C1,update=C1,expires=10