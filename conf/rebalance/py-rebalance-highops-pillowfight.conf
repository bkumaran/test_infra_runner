rebalance.rebalance_high_ops_pillowfight.RebalanceHighOpsWithPillowFight:
    # Rebalance in
    test_rebalance_in,nodes_in=1,replicas=0,bucket_storage=couchstore,nodes_init=1,items=2000000,batch_size=1000,bucket_size=1792,rate_limit=100000,instances=2,threads=5,loader=high_ops,GROUP=P0
    test_rebalance_in,nodes_in=1,replicas=1,bucket_storage=couchstore,nodes_init=2,items=2000000,batch_size=1000,bucket_size=1792,rate_limit=100000,instances=2,threads=5,loader=high_ops,GROUP=P0
    test_rebalance_in,nodes_in=1,replicas=1,bucket_storage=couchstore,nodes_init=3,items=2000000,batch_size=1000,bucket_size=1792,rate_limit=100000,instances=2,threads=5,loader=high_ops,GROUP=P0
    test_rebalance_in,nodes_in=1,replicas=2,bucket_storage=couchstore,nodes_init=3,items=2000000,batch_size=1000,bucket_size=1792,rate_limit=100000,instances=2,threads=5,loader=high_ops,GROUP=P1
    test_rebalance_in,nodes_in=1,replicas=3,bucket_storage=couchstore,nodes_init=4,items=2000000,batch_size=1000,bucket_size=1792,rate_limit=100000,instances=2,threads=5,loader=high_ops,GROUP=P1

    # Rebalance out
    test_rebalance_out,nodes_out=1,replicas=0,bucket_storage=couchstore,nodes_init=2,items=2000000,batch_size=1000,bucket_size=1792,rate_limit=100000,instances=2,threads=5,loader=high_ops,GROUP=P0
    test_rebalance_out,nodes_out=1,replicas=1,bucket_storage=couchstore,nodes_init=3,items=2000000,batch_size=1000,bucket_size=1792,rate_limit=100000,instances=2,threads=5,loader=high_ops,GROUP=P0
    test_rebalance_out,nodes_out=1,replicas=1,bucket_storage=couchstore,nodes_init=4,items=2000000,batch_size=1000,bucket_size=1792,rate_limit=100000,instances=2,threads=5,loader=high_ops,GROUP=P1
    test_rebalance_out,nodes_out=1,replicas=2,bucket_storage=couchstore,nodes_init=4,items=2000000,batch_size=1000,bucket_size=1792,rate_limit=100000,instances=2,threads=5,loader=high_ops,GROUP=P1

    # Rebalance in & out unequal number of nodes
    test_rebalance_in_out,nodes_in=2,nodes_out=1,bucket_storage=couchstore,replicas=1,nodes_init=2,items=2000000,batch_size=1000,bucket_size=1792,rate_limit=100000,instances=2,threads=5,loader=high_ops,GROUP=P0
    test_rebalance_in_out,nodes_in=1,nodes_out=2,bucket_storage=couchstore,replicas=1,nodes_init=3,items=2000000,batch_size=1000,bucket_size=1792,rate_limit=100000,instances=2,threads=5,loader=high_ops,GROUP=P0
    test_rebalance_in_out,nodes_in=2,nodes_out=1,bucket_storage=couchstore,replicas=2,nodes_init=3,items=2000000,batch_size=1000,bucket_size=1792,rate_limit=100000,instances=2,threads=5,loader=high_ops,GROUP=P0
    test_rebalance_in_out,nodes_in=2,nodes_out=1,bucket_storage=couchstore,replicas=2,nodes_init=4,items=2000000,batch_size=1000,bucket_size=1792,rate_limit=100000,instances=2,threads=5,loader=high_ops,GROUP=P1
    test_rebalance_in_out,nodes_in=1,nodes_out=2,bucket_storage=couchstore,replicas=2,nodes_init=4,items=2000000,batch_size=1000,bucket_size=1792,rate_limit=100000,instances=2,threads=5,loader=high_ops,GROUP=P1

    # Swap Rebalance
    test_rebalance_in_out,nodes_in=1,nodes_out=1,bucket_storage=couchstore,replicas=1,nodes_init=3,items=2000000,batch_size=1000,bucket_size=1792,rate_limit=100000,instances=2,threads=5,loader=high_ops,GROUP=P0
    test_rebalance_in_out,nodes_in=1,nodes_out=1,bucket_storage=couchstore,replicas=2,nodes_init=4,items=2000000,batch_size=1000,bucket_size=1792,rate_limit=100000,instances=2,threads=5,loader=high_ops,GROUP=P0
    test_rebalance_in_out,nodes_in=2,nodes_out=2,bucket_storage=couchstore,replicas=1,nodes_init=4,items=2000000,batch_size=1000,bucket_size=1792,rate_limit=100000,instances=2,threads=5,loader=high_ops,GROUP=P1
    test_rebalance_in_out,nodes_in=2,nodes_out=2,bucket_storage=couchstore,replicas=2,nodes_init=5,items=2000000,batch_size=1000,bucket_size=1792,rate_limit=100000,instances=2,threads=5,loader=high_ops,GROUP=P1

    # Graceful failover with addback
    test_graceful_failover_addback,node_out=3,replicas=2,bucket_storage=couchstore,nodes_init=4,items=2000000,batch_size=1000,bucket_size=1792,rate_limit=100000,recovery_type=full,instances=2,threads=5,loader=high_ops,GROUP=P0
    test_graceful_failover_addback,node_out=3,replicas=2,bucket_storage=couchstore,nodes_init=4,items=2000000,batch_size=1000,bucket_size=1792,rate_limit=100000,recovery_type=delta,instances=2,threads=5,loader=high_ops,GROUP=P1

    # Rebalances with update mutations
    test_rebalance_in_with_update_workload,bucket_storage=couchstore,nodes_in=1,replicas=1,nodes_init=2,items=6000000,bucket_size=1792,batch_size=1000,rate_limit=100000,instances=2,threads=5,loader=high_ops,GROUP=P0
    test_rebalance_out_with_update_workload,nodes_out=1,replicas=1,nodes_init=3,items=6000000,batch_size=1000,rate_limit=100000,bucket_size=1792,instances=2,threads=5,loader=high_ops,GROUP=P0
    test_rebalance_in_out_with_update_workload,nodes_in=1,nodes_out=1,replicas=1,nodes_init=3,items=6000000,batch_size=1000,bucket_size=1792,rate_limit=100000,instances=2,threads=5,loader=high_ops,GROUP=P1

    # Rebalances with expiry
    test_rebalance_in_with_expiry,nodes_in=1,bucket_storage=couchstore,replicas=1,nodes_init=2,items=6000000,bucket_size=1792,batch_size=1000,rate_limit=100000,instances=2,threads=5,loader=high_ops,GROUP=P0
    test_rebalance_out_with_expiry,nodes_out=1,bucket_storage=couchstore,replicas=1,nodes_init=3,items=6000000,bucket_size=1792,batch_size=1000,rate_limit=100000,instances=2,threads=5,loader=high_ops,GROUP=P1
    test_rebalance_in_out_with_expiry,nodes_in=1,bucket_storage=couchstore,nodes_out=1,replicas=1,nodes_init=3,bucket_size=1792,items=6000000,batch_size=1000,rate_limit=100000,instances=2,threads=5,loader=high_ops,GROUP=P1

    # Rebalances with delete mutations
    test_rebalance_in_with_delete_workload,nodes_in=1,bucket_storage=couchstore,replicas=1,nodes_init=2,items=6000000,batch_size=1000,rate_limit=100000,bucket_size=1792,instances=2,threads=5,loader=high_ops,GROUP=P0
    test_rebalance_out_with_delete_workload,nodes_out=1,bucket_storage=couchstore,replicas=1,nodes_init=3,items=6000000,batch_size=1000,rate_limit=100000,bucket_size=1792,instances=2,threads=5,loader=high_ops,GROUP=P0
    test_rebalance_in_out_with_delete_workload,nodes_in=1,bucket_storage=couchstore,nodes_out=1,replicas=1,nodes_init=3,items=6000000,bucket_size=1792,batch_size=1000,rate_limit=100000,instances=2,threads=5,loader=high_ops,GROUP=P1

    # DGM Cases
    test_rebalance_in,nodes_in=1,replicas=1,nodes_init=2,bucket_storage=couchstore,items=1000000,batch_size=1000,rate_limit=100000,instances=2,threads=5,bucket_size=500,loader=high_ops,GROUP=P0
    test_rebalance_out,nodes_out=1,replicas=1,nodes_init=3,bucket_storage=couchstore,items=1000000,batch_size=1000,rate_limit=100000,instances=2,threads=5,bucket_size=500,loader=high_ops,GROUP=P1
    test_rebalance_in_out,nodes_in=1,nodes_out=1,replicas=1,bucket_storage=couchstore,nodes_init=3,items=1000000,batch_size=1000,rate_limit=100000,instances=2,threads=5,bucket_size=500,loader=high_ops,GROUP=P1

    # Rebalances with views
    test_rebalance_in,nodes_in=1,replicas=1,nodes_init=2,bucket_storage=couchstore,items=500000,batch_size=1000,rate_limit=100000,bucket_size=1792,instances=2,threads=5,run_with_views=True,loader=high_ops,GROUP=P0
    test_rebalance_out,nodes_out=1,replicas=1,nodes_init=3,bucket_storage=couchstore,items=500000,batch_size=1000,rate_limit=100000,bucket_size=1792,instances=2,threads=5,run_with_views=True,loader=high_ops,GROUP=P1
    test_rebalance_in_out,nodes_in=1,nodes_out=1,replicas=1,bucket_storage=couchstore,nodes_init=3,items=500000,batch_size=1000,bucket_size=1792,rate_limit=100000,instances=2,threads=5,run_with_views=True,loader=high_ops,GROUP=P1

